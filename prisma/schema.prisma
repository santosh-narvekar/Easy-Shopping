// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl= env("DIRECT_URL")
}

model Profile{
  id      String     @id @default(uuid())
  firstName String
  lastName  String
  username String
  email   String
  address String 
  image   String
  favorites    Favorite[]
  Cart         Cart[]
  Reviews      Review[]
  Orders       Order[]
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  clerkId      String     @unique
}

model Product{
  id     String     @id  @default(uuid())
  product   String
  productPrice  Int
  productDesc String
  company    String
  category   String
  productQuantity Int
  image        String
  favorites    Favorite[]
  Cart         Cart[]
  Reviews      Review[]
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
}

model Favorite{
  id            String     @id  @default(uuid())
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
  productId     String
  profileId     String
  product       Product @relation(fields:[productId],references:[id], onDelete: Cascade)
  profile       Profile @relation(fields:[profileId],references:[clerkId],onDelete: Cascade)
}

model Cart{
  id         String   @id   @default(uuid())
  productId  String 
  profileId  String
  selectedQuantity Int
  price      Int
  product    Product @relation(fields:[productId],references:[id],onDelete:Cascade)
  profile    Profile @relation(fields:[profileId],references:[clerkId],onDelete:Cascade)
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
}

model Review{
  id         String    @id   @default(uuid())
  productId  String
  profileId  String
  review     String
  rating     Int
  product    Product  @relation(fields:[productId],references:[id],onDelete:Cascade)
  profile    Profile  @relation(fields:[profileId],references:[clerkId],onDelete:Cascade)
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
}

model Order{
  id          String  @id @default(uuid())
  profileId   String
  profile     Profile @relation(fields:[profileId],references:[clerkId],onDelete:Cascade)
  orderTotal  Int
  ItemsIncluded Int
  paymentStatus Boolean @default(false)
  deliveryStatus Boolean @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}